#include <Wire.h>
#include "SSD1306.h"
#include "DHT.h"
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>
#include <SPI.h>
#include <MFRC522.h>
 
const char* ssid = "Sarvesh";
const char* password = "8879607830";
//WiFiClient client;

char server[] = "website ip";  //eg: 192.168.0.222


#define dataPin1 D1
#define dataPin2 D2
#define dataPin3 D5
#define dataPin4 D6
    
#define DHTTYPE1 DHT11
#define DHTTYPE2 DHT11
#define DHTTYPE3 DHT11 
#define DHTTYPE4 DHT11      

SSD1306  display(0x3C, D3, D4);   // D3 -> SDA,D4 -> SCL
DHT dht1(dataPin1, DHTTYPE1);
DHT dht2(dataPin2, DHTTYPE2);
DHT dht3(dataPin3, DHTTYPE3);
DHT dht4(dataPin4, DHTTYPE4);

float humidityData1;
float temperatureData1;
float humidityData2;
float temperatureData2;
float humidityData3;
float temperatureData3;
float humidityData4;
float temperatureData4;

WiFiClient client;
void setup(){
  Serial.begin(115200); // or 9600 tak 
  display.init();
  display.flipScreenVertically();
  display.setFont(ArialMT_Plain_16);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  dht1.begin(); // initialize dht
  dht2.begin();
  dht3.begin();
  dht4.begin();
  Serial.println("Connecting to ");
  Serial.println(ssid);
 
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) 
  {
        delay(500);
        Serial.print(".");
  }
   Serial.println("");
    Serial.println("WiFi connected");  
    
// Start the server
//  server.begin();
  Serial.println("Server started");
  Serial.print(WiFi.localIP());
  delay(1000);
  Serial.println("connecting...");

}
void displayWeather1 ()
{ display.clear();
  float h = dht1.readHumidity();
  // Read temperature as Celsius
  float t = dht1.readTemperature();
  // Read temperature as Fahrenheit
  float f = dht1.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)){
    display.clear(); // clearing the display
    display.drawString(5,0, "DHT 1 Failed!");
    return;
  }
 
  display.clear();

  display.drawString(30, 0, "DTH 1 ");
  display.drawString(0, 20, "Humidity: " + String(h) + "%\t"); 
  display.drawString(0, 40, "Temp: " + String(t) + "°C"); 
  
  //display.drawString(0, 40, "Temp: " + String(f) + "°F");  
}

void displayWeather2(){ //Creating a function to read and display temperature and humidity on OLED display
  float h = dht2.readHumidity();
  // Read temperature as Celsius
  float t = dht2.readTemperature();
  // Read temperature as Fahrenheit
  float f = dht2.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)){
    display.clear(); // clearing the display
    display.drawString(5,0, "DHT 2 Failed!");
    return;
  }
 

  display.clear();

  display.drawString(30, 0, "DTH 2");
  display.drawString(0, 20, "Humidity: " + String(h) + "%\t"); 
  display.drawString(0, 40, "Temp: " + String(t) + "°C"); 
  
  
  //display.drawString(0, 40, "Temp: " + String(f) + "°F"); 
}

void displayWeather3 ()
{ display.clear();
  float h = dht3.readHumidity();
  // Read temperature as Celsius
  float t = dht3.readTemperature();
  // Read temperature as Fahrenheit
  float f = dht3.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)){
    display.clear(); // clearing the display
    display.drawString(5,0, "DHT 3 Failed!");
    return;
  }

 
  display.clear();

  display.drawString(30, 0, "DTH 3 ");
  display.drawString(0, 20, "Humidity: " + String(h) + "%\t"); 
  display.drawString(0, 40, "Temp: " + String(t) + "°C"); 
  
  
  //display.drawString(0, 40, "Temp: " + String(f) + "°F"); 
}

void displayWeather4 ()
{ display.clear();
  float h = dht4.readHumidity();
  // Read temperature as Celsius
  float t = dht4.readTemperature();
  // Read temperature as Fahrenheit
  float f = dht4.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)){
    display.clear(); // clearing the display
    display.drawString(5,0, "DHT 4 Failed!");
    return;
  }
  
  display.clear();

  display.drawString(30, 0, "DTH 4 ");
  display.drawString(0, 20, "Humidity: " + String(h) + "%\t"); 
  display.drawString(0, 40, "Temp: " + String(t) + "°C"); 
  
  
  //display.drawString(0, 40, "Temp: " + String(f) + "°F"); 
  
    
}
void loop(){
  humidityData1 = dht1.readHumidity();
  temperatureData1 = dht1.readTemperature();
  humidityData2 = dht2.readHumidity();
  temperatureData2 = dht2.readTemperature();
  humidityData3 = dht3.readHumidity();
  temperatureData3 = dht3.readTemperature();
  humidityData4 = dht4.readHumidity();
  temperatureData4 = dht4.readTemperature(); 
  Sending_To_phpmyadmindatabase(); 
  delay(5000); // interval
  displayWeather1(); //Calling back the displayWeather function
  display.display();
  delay (5000);
  displayWeather2();
  display.display();
  delay (5000);
  displayWeather3();
  display.display();
  delay (5000);
  displayWeather4();
  display.display();
  delay (5000);
}
void Sending_To_phpmyadmindatabase()   //CONNECTING WITH MYSQL
 {
   if (client.connect(server, 80)) {
    Serial.println("connected");
    // Make a HTTP request:
    Serial.print("GET http://omagroservices.com/get-data.php?temp1=");
    client.print("GET http://omagroservices.com/get-data.php?temp1=");     //YOUR URL
    Serial.println(temperatureData1);
    client.print(temperatureData1);
    client.print("&humidity1=");
    Serial.println("&humidity1=");
    client.print(humidityData1);
    Serial.println(humidityData1);
    client.print("&temp2=");
    Serial.println("&temp2=");
    Serial.println(temperatureData2);
    client.print(temperatureData2);
    client.print("&humidity2=");
    Serial.println("&humidity2=");
    client.print(humidityData2);
    Serial.println(humidityData2);
    client.print("&temp3=");
    Serial.println("&temp3=");
    Serial.println(temperatureData3);
    client.print(temperatureData3);
    client.print("&humidity3=");
    Serial.println("&humidity3=");
    client.print(humidityData3);
    Serial.println(humidityData3);
    client.print("&temp4=");
    Serial.println("&temp4=");
    Serial.println(temperatureData4);
    client.print(temperatureData4);
    client.print("&humidity4=");
    Serial.println("&humidity4=");
    client.print(humidityData4);
    Serial.println(humidityData4);
    client.print(" ");      //SPACE BEFORE HTTP/1.1
    client.print("HTTP/1.1");
    client.println();
    client.println("Host:website ip"); // put ur website ip
    client.println("Connection: close");
    client.println();
  } else {
    // if you didn't get a connection to the server:
    Serial.println("connection failed");
  }
 }
